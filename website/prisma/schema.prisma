// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model Song {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())

    name        String
    artist      String
    instruments SongInstrument[]

    @@unique([name, artist])
}

model SongInstrument {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())

    Song         Song       @relation(fields: [songId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    songId       String
    Instrument   Instrument @relation(fields: [instrumentId], references: [id])
    instrumentId String
    Sheet        Sheet?
}

model Instrument {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())

    name       String
    type       String
    trackCount Int
    isFretted  Boolean

    SongInstrument   SongInstrument[]
    InstrumentTuning InstrumentTuning[]

    @@unique([name])
}

model InstrumentTuning {
    pitch        String      @id
    Instrument   Instrument? @relation(fields: [instrumentId], references: [id], onDelete: SetNull, onUpdate: Cascade)
    instrumentId String?
}

model Sheet {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())

    trackCount Int
    bars       Bar[]
    notes      Note[]

    SongInstrument   SongInstrument @relation(fields: [songInstrumentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    songInstrumentId String

    @@unique([songInstrumentId])
}

model Bar {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())

    beatCount   Int
    dibobinador Int
    tempo       Int
    start       Float
    capacity    Float
    index       Int

    Sheet   Sheet  @relation(fields: [sheetId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    sheetId String
}

model Note {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())

    trackIndex Int
    start      Float
    duration   Float
    pitch      String
    hasSustain Boolean @default(false)
    isSustain  Boolean @default(false)

    Sheet   Sheet  @relation(fields: [sheetId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    sheetId String
}
